// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.1
// Source: mcp.proto

package mcpservice

import (
	"context"

	"mcp/applications/mcp/pb/mcp"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AppendMessageRequest   = mcp.AppendMessageRequest
	AppendMessageResponse  = mcp.AppendMessageResponse
	DeleteSessionRequest   = mcp.DeleteSessionRequest
	DeleteSessionResponse  = mcp.DeleteSessionResponse
	GetSessionListRequest  = mcp.GetSessionListRequest
	GetSessionListResponse = mcp.GetSessionListResponse
	GetSessionRequest      = mcp.GetSessionRequest
	GetSessionResponse     = mcp.GetSessionResponse
	Message                = mcp.Message
	NewSessionRequest      = mcp.NewSessionRequest
	NewSessionResponse     = mcp.NewSessionResponse
	SessionInfo            = mcp.SessionInfo

	McpService interface {
		NewSession(ctx context.Context, in *NewSessionRequest, opts ...grpc.CallOption) (*NewSessionResponse, error)
		GetSessionList(ctx context.Context, in *GetSessionListRequest, opts ...grpc.CallOption) (*GetSessionListResponse, error)
		GetSession(ctx context.Context, in *GetSessionRequest, opts ...grpc.CallOption) (*GetSessionResponse, error)
		DeleteSession(ctx context.Context, in *DeleteSessionRequest, opts ...grpc.CallOption) (*DeleteSessionResponse, error)
		AppendMessage(ctx context.Context, in *AppendMessageRequest, opts ...grpc.CallOption) (*AppendMessageResponse, error)
	}

	defaultMcpService struct {
		cli zrpc.Client
	}
)

func NewMcpService(cli zrpc.Client) McpService {
	return &defaultMcpService{
		cli: cli,
	}
}

func (m *defaultMcpService) NewSession(ctx context.Context, in *NewSessionRequest, opts ...grpc.CallOption) (*NewSessionResponse, error) {
	client := mcp.NewMcpServiceClient(m.cli.Conn())
	return client.NewSession(ctx, in, opts...)
}

func (m *defaultMcpService) GetSessionList(ctx context.Context, in *GetSessionListRequest, opts ...grpc.CallOption) (*GetSessionListResponse, error) {
	client := mcp.NewMcpServiceClient(m.cli.Conn())
	return client.GetSessionList(ctx, in, opts...)
}

func (m *defaultMcpService) GetSession(ctx context.Context, in *GetSessionRequest, opts ...grpc.CallOption) (*GetSessionResponse, error) {
	client := mcp.NewMcpServiceClient(m.cli.Conn())
	return client.GetSession(ctx, in, opts...)
}

func (m *defaultMcpService) DeleteSession(ctx context.Context, in *DeleteSessionRequest, opts ...grpc.CallOption) (*DeleteSessionResponse, error) {
	client := mcp.NewMcpServiceClient(m.cli.Conn())
	return client.DeleteSession(ctx, in, opts...)
}

func (m *defaultMcpService) AppendMessage(ctx context.Context, in *AppendMessageRequest, opts ...grpc.CallOption) (*AppendMessageResponse, error) {
	client := mcp.NewMcpServiceClient(m.cli.Conn())
	return client.AppendMessage(ctx, in, opts...)
}
