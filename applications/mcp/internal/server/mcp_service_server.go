// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.1
// Source: mcp.proto

package server

import (
	"context"

	"mcp/applications/mcp/internal/logic"
	"mcp/applications/mcp/internal/svc"
	"mcp/applications/mcp/pb/mcp"
)

type McpServiceServer struct {
	svcCtx *svc.ServiceContext
	mcp.UnimplementedMcpServiceServer
}

func NewMcpServiceServer(svcCtx *svc.ServiceContext) *McpServiceServer {
	return &McpServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *McpServiceServer) NewSession(ctx context.Context, in *mcp.NewSessionRequest) (*mcp.NewSessionResponse, error) {
	l := logic.NewNewSessionLogic(ctx, s.svcCtx)
	return l.NewSession(in)
}

func (s *McpServiceServer) GetSessionList(ctx context.Context, in *mcp.GetSessionListRequest) (*mcp.GetSessionListResponse, error) {
	l := logic.NewGetSessionListLogic(ctx, s.svcCtx)
	return l.GetSessionList(in)
}

func (s *McpServiceServer) GetSession(ctx context.Context, in *mcp.GetSessionRequest) (*mcp.GetSessionResponse, error) {
	l := logic.NewGetSessionLogic(ctx, s.svcCtx)
	return l.GetSession(in)
}

func (s *McpServiceServer) DeleteSession(ctx context.Context, in *mcp.DeleteSessionRequest) (*mcp.DeleteSessionResponse, error) {
	l := logic.NewDeleteSessionLogic(ctx, s.svcCtx)
	return l.DeleteSession(in)
}

func (s *McpServiceServer) AppendMessage(ctx context.Context, in *mcp.AppendMessageRequest) (*mcp.AppendMessageResponse, error) {
	l := logic.NewAppendMessageLogic(ctx, s.svcCtx)
	return l.AppendMessage(in)
}
