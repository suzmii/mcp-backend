// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.0
// source: applications/mcp/proto/mcp.proto

package mcp

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SessionInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionUuid   string                 `protobuf:"bytes,1,opt,name=session_uuid,json=sessionUuid,proto3" json:"session_uuid,omitempty"`
	SessionHint   string                 `protobuf:"bytes,2,opt,name=session_hint,json=sessionHint,proto3" json:"session_hint,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SessionInfo) Reset() {
	*x = SessionInfo{}
	mi := &file_applications_mcp_proto_mcp_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SessionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionInfo) ProtoMessage() {}

func (x *SessionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_applications_mcp_proto_mcp_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionInfo.ProtoReflect.Descriptor instead.
func (*SessionInfo) Descriptor() ([]byte, []int) {
	return file_applications_mcp_proto_mcp_proto_rawDescGZIP(), []int{0}
}

func (x *SessionInfo) GetSessionUuid() string {
	if x != nil {
		return x.SessionUuid
	}
	return ""
}

func (x *SessionInfo) GetSessionHint() string {
	if x != nil {
		return x.SessionHint
	}
	return ""
}

type Message struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Role          string                 `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	Content       string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_applications_mcp_proto_mcp_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_applications_mcp_proto_mcp_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_applications_mcp_proto_mcp_proto_rawDescGZIP(), []int{1}
}

func (x *Message) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *Message) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type CreateSessionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        uint64                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Hint          string                 `protobuf:"bytes,2,opt,name=hint,proto3" json:"hint,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSessionRequest) Reset() {
	*x = CreateSessionRequest{}
	mi := &file_applications_mcp_proto_mcp_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSessionRequest) ProtoMessage() {}

func (x *CreateSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_applications_mcp_proto_mcp_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSessionRequest.ProtoReflect.Descriptor instead.
func (*CreateSessionRequest) Descriptor() ([]byte, []int) {
	return file_applications_mcp_proto_mcp_proto_rawDescGZIP(), []int{2}
}

func (x *CreateSessionRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateSessionRequest) GetHint() string {
	if x != nil {
		return x.Hint
	}
	return ""
}

type CreateSessionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionUuid   string                 `protobuf:"bytes,1,opt,name=session_uuid,json=sessionUuid,proto3" json:"session_uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSessionResponse) Reset() {
	*x = CreateSessionResponse{}
	mi := &file_applications_mcp_proto_mcp_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSessionResponse) ProtoMessage() {}

func (x *CreateSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_applications_mcp_proto_mcp_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSessionResponse.ProtoReflect.Descriptor instead.
func (*CreateSessionResponse) Descriptor() ([]byte, []int) {
	return file_applications_mcp_proto_mcp_proto_rawDescGZIP(), []int{3}
}

func (x *CreateSessionResponse) GetSessionUuid() string {
	if x != nil {
		return x.SessionUuid
	}
	return ""
}

type GetSessionListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        uint64                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Page          uint64                 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      uint64                 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSessionListRequest) Reset() {
	*x = GetSessionListRequest{}
	mi := &file_applications_mcp_proto_mcp_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSessionListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSessionListRequest) ProtoMessage() {}

func (x *GetSessionListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_applications_mcp_proto_mcp_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSessionListRequest.ProtoReflect.Descriptor instead.
func (*GetSessionListRequest) Descriptor() ([]byte, []int) {
	return file_applications_mcp_proto_mcp_proto_rawDescGZIP(), []int{4}
}

func (x *GetSessionListRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetSessionListRequest) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetSessionListRequest) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GetSessionListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sessions      []*SessionInfo         `protobuf:"bytes,1,rep,name=sessions,proto3" json:"sessions,omitempty"`
	TotalPage     uint64                 `protobuf:"varint,2,opt,name=total_page,json=totalPage,proto3" json:"total_page,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSessionListResponse) Reset() {
	*x = GetSessionListResponse{}
	mi := &file_applications_mcp_proto_mcp_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSessionListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSessionListResponse) ProtoMessage() {}

func (x *GetSessionListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_applications_mcp_proto_mcp_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSessionListResponse.ProtoReflect.Descriptor instead.
func (*GetSessionListResponse) Descriptor() ([]byte, []int) {
	return file_applications_mcp_proto_mcp_proto_rawDescGZIP(), []int{5}
}

func (x *GetSessionListResponse) GetSessions() []*SessionInfo {
	if x != nil {
		return x.Sessions
	}
	return nil
}

func (x *GetSessionListResponse) GetTotalPage() uint64 {
	if x != nil {
		return x.TotalPage
	}
	return 0
}

type GetSessionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        uint64                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	SessionUuid   string                 `protobuf:"bytes,2,opt,name=session_uuid,json=sessionUuid,proto3" json:"session_uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSessionRequest) Reset() {
	*x = GetSessionRequest{}
	mi := &file_applications_mcp_proto_mcp_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSessionRequest) ProtoMessage() {}

func (x *GetSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_applications_mcp_proto_mcp_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSessionRequest.ProtoReflect.Descriptor instead.
func (*GetSessionRequest) Descriptor() ([]byte, []int) {
	return file_applications_mcp_proto_mcp_proto_rawDescGZIP(), []int{6}
}

func (x *GetSessionRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetSessionRequest) GetSessionUuid() string {
	if x != nil {
		return x.SessionUuid
	}
	return ""
}

type GetSessionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Session       *SessionInfo           `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	Messages      []*Message             `protobuf:"bytes,2,rep,name=messages,proto3" json:"messages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSessionResponse) Reset() {
	*x = GetSessionResponse{}
	mi := &file_applications_mcp_proto_mcp_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSessionResponse) ProtoMessage() {}

func (x *GetSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_applications_mcp_proto_mcp_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSessionResponse.ProtoReflect.Descriptor instead.
func (*GetSessionResponse) Descriptor() ([]byte, []int) {
	return file_applications_mcp_proto_mcp_proto_rawDescGZIP(), []int{7}
}

func (x *GetSessionResponse) GetSession() *SessionInfo {
	if x != nil {
		return x.Session
	}
	return nil
}

func (x *GetSessionResponse) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

type DeleteSessionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        uint64                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	SessionUuid   string                 `protobuf:"bytes,2,opt,name=session_uuid,json=sessionUuid,proto3" json:"session_uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSessionRequest) Reset() {
	*x = DeleteSessionRequest{}
	mi := &file_applications_mcp_proto_mcp_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSessionRequest) ProtoMessage() {}

func (x *DeleteSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_applications_mcp_proto_mcp_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSessionRequest.ProtoReflect.Descriptor instead.
func (*DeleteSessionRequest) Descriptor() ([]byte, []int) {
	return file_applications_mcp_proto_mcp_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteSessionRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *DeleteSessionRequest) GetSessionUuid() string {
	if x != nil {
		return x.SessionUuid
	}
	return ""
}

type DeleteSessionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSessionResponse) Reset() {
	*x = DeleteSessionResponse{}
	mi := &file_applications_mcp_proto_mcp_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSessionResponse) ProtoMessage() {}

func (x *DeleteSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_applications_mcp_proto_mcp_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSessionResponse.ProtoReflect.Descriptor instead.
func (*DeleteSessionResponse) Descriptor() ([]byte, []int) {
	return file_applications_mcp_proto_mcp_proto_rawDescGZIP(), []int{9}
}

type AppendMessageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        uint64                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	SessionUuid   string                 `protobuf:"bytes,2,opt,name=session_uuid,json=sessionUuid,proto3" json:"session_uuid,omitempty"`
	Messages      []*Message             `protobuf:"bytes,3,rep,name=messages,proto3" json:"messages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppendMessageRequest) Reset() {
	*x = AppendMessageRequest{}
	mi := &file_applications_mcp_proto_mcp_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppendMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendMessageRequest) ProtoMessage() {}

func (x *AppendMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_applications_mcp_proto_mcp_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendMessageRequest.ProtoReflect.Descriptor instead.
func (*AppendMessageRequest) Descriptor() ([]byte, []int) {
	return file_applications_mcp_proto_mcp_proto_rawDescGZIP(), []int{10}
}

func (x *AppendMessageRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AppendMessageRequest) GetSessionUuid() string {
	if x != nil {
		return x.SessionUuid
	}
	return ""
}

func (x *AppendMessageRequest) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

type AppendMessageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppendMessageResponse) Reset() {
	*x = AppendMessageResponse{}
	mi := &file_applications_mcp_proto_mcp_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppendMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendMessageResponse) ProtoMessage() {}

func (x *AppendMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_applications_mcp_proto_mcp_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendMessageResponse.ProtoReflect.Descriptor instead.
func (*AppendMessageResponse) Descriptor() ([]byte, []int) {
	return file_applications_mcp_proto_mcp_proto_rawDescGZIP(), []int{11}
}

var File_applications_mcp_proto_mcp_proto protoreflect.FileDescriptor

const file_applications_mcp_proto_mcp_proto_rawDesc = "" +
	"\n" +
	" applications/mcp/proto/mcp.proto\x12\x06mcp.v1\"S\n" +
	"\vSessionInfo\x12!\n" +
	"\fsession_uuid\x18\x01 \x01(\tR\vsessionUuid\x12!\n" +
	"\fsession_hint\x18\x02 \x01(\tR\vsessionHint\"7\n" +
	"\aMessage\x12\x12\n" +
	"\x04role\x18\x01 \x01(\tR\x04role\x12\x18\n" +
	"\acontent\x18\x02 \x01(\tR\acontent\"C\n" +
	"\x14CreateSessionRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x04R\x06userId\x12\x12\n" +
	"\x04hint\x18\x02 \x01(\tR\x04hint\":\n" +
	"\x15CreateSessionResponse\x12!\n" +
	"\fsession_uuid\x18\x01 \x01(\tR\vsessionUuid\"a\n" +
	"\x15GetSessionListRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x04R\x06userId\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x04R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x04R\bpageSize\"h\n" +
	"\x16GetSessionListResponse\x12/\n" +
	"\bsessions\x18\x01 \x03(\v2\x13.mcp.v1.SessionInfoR\bsessions\x12\x1d\n" +
	"\n" +
	"total_page\x18\x02 \x01(\x04R\ttotalPage\"O\n" +
	"\x11GetSessionRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x04R\x06userId\x12!\n" +
	"\fsession_uuid\x18\x02 \x01(\tR\vsessionUuid\"p\n" +
	"\x12GetSessionResponse\x12-\n" +
	"\asession\x18\x01 \x01(\v2\x13.mcp.v1.SessionInfoR\asession\x12+\n" +
	"\bmessages\x18\x02 \x03(\v2\x0f.mcp.v1.MessageR\bmessages\"R\n" +
	"\x14DeleteSessionRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x04R\x06userId\x12!\n" +
	"\fsession_uuid\x18\x02 \x01(\tR\vsessionUuid\"\x17\n" +
	"\x15DeleteSessionResponse\"\x7f\n" +
	"\x14AppendMessageRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x04R\x06userId\x12!\n" +
	"\fsession_uuid\x18\x02 \x01(\tR\vsessionUuid\x12+\n" +
	"\bmessages\x18\x03 \x03(\v2\x0f.mcp.v1.MessageR\bmessages\"\x17\n" +
	"\x15AppendMessageResponse2\x8c\x03\n" +
	"\n" +
	"McpService\x12L\n" +
	"\rCreateSession\x12\x1c.mcp.v1.CreateSessionRequest\x1a\x1d.mcp.v1.CreateSessionResponse\x12O\n" +
	"\x0eGetSessionList\x12\x1d.mcp.v1.GetSessionListRequest\x1a\x1e.mcp.v1.GetSessionListResponse\x12C\n" +
	"\n" +
	"GetSession\x12\x19.mcp.v1.GetSessionRequest\x1a\x1a.mcp.v1.GetSessionResponse\x12L\n" +
	"\rDeleteSession\x12\x1c.mcp.v1.DeleteSessionRequest\x1a\x1d.mcp.v1.DeleteSessionResponse\x12L\n" +
	"\rAppendMessage\x12\x1c.mcp.v1.AppendMessageRequest\x1a\x1d.mcp.v1.AppendMessageResponseB\aZ\x05./mcpb\x06proto3"

var (
	file_applications_mcp_proto_mcp_proto_rawDescOnce sync.Once
	file_applications_mcp_proto_mcp_proto_rawDescData []byte
)

func file_applications_mcp_proto_mcp_proto_rawDescGZIP() []byte {
	file_applications_mcp_proto_mcp_proto_rawDescOnce.Do(func() {
		file_applications_mcp_proto_mcp_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_applications_mcp_proto_mcp_proto_rawDesc), len(file_applications_mcp_proto_mcp_proto_rawDesc)))
	})
	return file_applications_mcp_proto_mcp_proto_rawDescData
}

var file_applications_mcp_proto_mcp_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_applications_mcp_proto_mcp_proto_goTypes = []any{
	(*SessionInfo)(nil),            // 0: mcp.v1.SessionInfo
	(*Message)(nil),                // 1: mcp.v1.Message
	(*CreateSessionRequest)(nil),   // 2: mcp.v1.CreateSessionRequest
	(*CreateSessionResponse)(nil),  // 3: mcp.v1.CreateSessionResponse
	(*GetSessionListRequest)(nil),  // 4: mcp.v1.GetSessionListRequest
	(*GetSessionListResponse)(nil), // 5: mcp.v1.GetSessionListResponse
	(*GetSessionRequest)(nil),      // 6: mcp.v1.GetSessionRequest
	(*GetSessionResponse)(nil),     // 7: mcp.v1.GetSessionResponse
	(*DeleteSessionRequest)(nil),   // 8: mcp.v1.DeleteSessionRequest
	(*DeleteSessionResponse)(nil),  // 9: mcp.v1.DeleteSessionResponse
	(*AppendMessageRequest)(nil),   // 10: mcp.v1.AppendMessageRequest
	(*AppendMessageResponse)(nil),  // 11: mcp.v1.AppendMessageResponse
}
var file_applications_mcp_proto_mcp_proto_depIdxs = []int32{
	0,  // 0: mcp.v1.GetSessionListResponse.sessions:type_name -> mcp.v1.SessionInfo
	0,  // 1: mcp.v1.GetSessionResponse.session:type_name -> mcp.v1.SessionInfo
	1,  // 2: mcp.v1.GetSessionResponse.messages:type_name -> mcp.v1.Message
	1,  // 3: mcp.v1.AppendMessageRequest.messages:type_name -> mcp.v1.Message
	2,  // 4: mcp.v1.McpService.CreateSession:input_type -> mcp.v1.CreateSessionRequest
	4,  // 5: mcp.v1.McpService.GetSessionList:input_type -> mcp.v1.GetSessionListRequest
	6,  // 6: mcp.v1.McpService.GetSession:input_type -> mcp.v1.GetSessionRequest
	8,  // 7: mcp.v1.McpService.DeleteSession:input_type -> mcp.v1.DeleteSessionRequest
	10, // 8: mcp.v1.McpService.AppendMessage:input_type -> mcp.v1.AppendMessageRequest
	3,  // 9: mcp.v1.McpService.CreateSession:output_type -> mcp.v1.CreateSessionResponse
	5,  // 10: mcp.v1.McpService.GetSessionList:output_type -> mcp.v1.GetSessionListResponse
	7,  // 11: mcp.v1.McpService.GetSession:output_type -> mcp.v1.GetSessionResponse
	9,  // 12: mcp.v1.McpService.DeleteSession:output_type -> mcp.v1.DeleteSessionResponse
	11, // 13: mcp.v1.McpService.AppendMessage:output_type -> mcp.v1.AppendMessageResponse
	9,  // [9:14] is the sub-list for method output_type
	4,  // [4:9] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_applications_mcp_proto_mcp_proto_init() }
func file_applications_mcp_proto_mcp_proto_init() {
	if File_applications_mcp_proto_mcp_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_applications_mcp_proto_mcp_proto_rawDesc), len(file_applications_mcp_proto_mcp_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_applications_mcp_proto_mcp_proto_goTypes,
		DependencyIndexes: file_applications_mcp_proto_mcp_proto_depIdxs,
		MessageInfos:      file_applications_mcp_proto_mcp_proto_msgTypes,
	}.Build()
	File_applications_mcp_proto_mcp_proto = out.File
	file_applications_mcp_proto_mcp_proto_goTypes = nil
	file_applications_mcp_proto_mcp_proto_depIdxs = nil
}
